---
- name: set
  set_fact:
    solr_minimum_java_version: 1.7
  when: solr_major_version < 6

- name: get java version
  shell:   "java -version 2>&1"
  register: java_version_result
  changed_when: false

  # NOTE: regex_search() returns an array of matches, so we will need to use the 'first' filter to make use of the first (and only) value
- set_fact: returned_java_version={{ java_version_result.stdout | regex_replace('^$','0.0.0') | regex_search('(?P<test>\d+\.\d+.\d+)', '\\g<test>' ) | first }}

- name: test java version
  fail:
    msg: "this installation of solr requires java version {{ solr_minimum_java_version }} or higher"
  when: "not returned_java_version | version_compare(solr_minimum_java_version, '>=')"

- name: RedHat - install lsof
  yum: name=lsof state=present
  when: ansible_os_family == 'RedHat'

- name: get solr checksum
  set_fact:
    solr_checksum: "{{ solr_checksum_algo }}:{{ item | replace(' *' + solr_download_file,'') }}"
  with_url: "{{ solr_checksum_url }}"

- name: debug the checksum
  debug: var=solr_checksum

- name: get solr
  get_url:
    url: "{{ solr_url }}"
    dest: "{{ solr_download_dir }}"
    checksum: "{{ solr_checksum }}"

- name: extract solr_install_script
  shell: "tar xzf {{ solr_download_dir }}/{{ solr_download_file }} --directory={{ solr_download_dir }} {{ solr_dir }}/bin/{{ solr_install_script }} --strip-components=2"
  args:
    warn: no
    # TODOn't: prevents upgrading
    # creates: "{{ solr_download_dir }}/{{ solr_install_script }}"

  # TODO: parameterize to do more than just the default
  # TODO: create systemd unit file, rather than relying on
  # the tres basic init.d script we get from the installer
- name: run solr_install_script
  shell: "{{ solr_download_dir }}/{{ solr_install_script }} {{ solr_download_dir }}/{{ solr_download_file }} -f"
  args:
    creates: "{{ solr_install_dir }}/{{ solr_dir }}/bin/solr"
  register: solr_install_result
  become: true

  # NOTE: workaround for systemd on RedHat-family OSes
  # NOTE: have to use command, rather than the service module
  # (because that would address systemd)
- block:
  - name: stop solr service
    command: service solr stop
    args:
      warn: no

  - name: reload solr service in systemd
    systemd:
      name: solr
      daemon_reload: yes
  when: ansible_os_family == 'RedHat' and solr_install_result.changed

- name: enable and start the solr service
  service:
    name: solr
    state: started
    enabled: yes

- name: create cores
  command: "{{ solr_bin }}/solr create -c {{ item }} -d basic_configs"
  args:
    creates: "/var/solr/data/{{ item }}"
  become_user: "{{ solr_user }}"
  with_items: "{{ solr_cores }}"
